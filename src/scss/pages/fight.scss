@import "../app/main";
$caret-size: 14px;
$caret-shadow-size: calc(#{$caret-size} + 2px);
$caret-color: #fff;
$caret-shadow-color: #dcdcdc;

@mixin balloon-caret($size, $color, $turn) {
  position: absolute;
  left: 50%;
  content: '';
  border-right: $size solid transparent;
  border-left: $size solid transparent;

  $border-prop: $size solid $color;
  $pos-prop: calc(-1 * #{$size});

  @if ($turn=="me") {
    border-top: $border-prop;
    bottom: $pos-prop;
  }

  @else {
    border-bottom: $border-prop;
    top: $pos-prop;
  }

  transform: translateX(-50%);
}

.fight {
  p {
    margin: 0;
  }

  .container {
    display: flex;
    flex-direction: column;
  }

  .grid {
    display: grid;
    grid-template-rows: repeat(auto-fit, 1fr);
    grid-gap: 1rem;
    text-align: center;
  }

  .btn.-circle {
    width: 44px;
    height: 44px;
    line-height: 44px;
    padding: 0;
    background-color: $disabled-btn-color;
  }

  .btn.-circle.active {
    background-color: $primary-color;
  }

  .call,
  .raise {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    width: 100%;
    text-align: left;
    min-height: 44px;
  }


  .call .label,
  .raise .label {
    width: 18%;
    font-size: .85rem;
    padding-right: 3%;
  }

  .call .btn-box,
  .raise .btn-box {
    flex-grow: 1;
  }

  .btn-box .btn {
    margin-right: 0.25rem;
  }

  .btn:disabled {
    background-color: $disabled-btn-color;
    cursor: not-allowed;
  }

  .balloon {
    position: relative;
    background-color: #fff;
    padding: 8px;
    width: 90%;
    margin: 1rem auto 0 auto;
    border-radius: 40px;
    border-width: 2px;
    border-style: solid;
    border-color: #dcdcdc;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
  }



  .balloon:before {
    z-index: 3;
  }

  .balloon:after {
    z-index: 2;
  }

  .balloon.is-my-turn:before {
    @include balloon-caret($caret-size, $caret-color, "me");
  }

  .balloon.is-my-turn:after {
    @include balloon-caret($caret-shadow-size, $caret-shadow-color, "me");
  }

  .balloon.is-opp-turn:before {
    @include balloon-caret($caret-size, $caret-color, "opp");
  }

  .balloon.is-opp-turn:after {
    @include balloon-caret($caret-shadow-size, $caret-shadow-color, "opp");
  }

  .round {
    font-size: .75rem;
    margin-right: 1rem;
    margin-top: 0.125rem;
    color: #009e9f;
  }

  .message {
    font-size: 1rem;
    margin: 0;
    font-weight: 600;
  }

  .is-neutral .message {
    font-weight: 400;
  }

  .is-my-turn .message {
    color: $primary-color;

  }

  .is-opp-turn .message {
    color: $opp-color;
  }

  .is-called .message {
    font-weight: 700;
    color: $call-color;
  }

  .control {
    width: 100%;
  }

  .fight {
    margin-top: 0.4rem;
  }

  .play-again {
    margin-top: 1.5rem;
  }

  .img-box {
    text-align: center;
  }

  .fist,
  .face {
    width: auto;
    object-fit: cover;
  }

  .fist {
    height: 88px;
  }

  .face {
    height: 64px;
  }

  .adsense {
    margin-top: auto;
  }
}
